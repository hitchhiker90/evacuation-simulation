name: Evacuation Simulation - main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build and publish application image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: ${{ github.repository }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
          dockerfile: Dockerfile
          tags: latest

  deploy:
    name: Deploy
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up WireGuard
        env:
          WG_ENDPOINT: '${{ secrets.WG_ENDPOINT }}'
          WG_PUBLIC_KEY: '${{ secrets.WG_PUBLIC_KEY }}'
          WG_IPS: '${{ secrets.WG_IPS }}'
          WG_ALLOWED_IPS: '${{ secrets.WG_ALLOWED_IPS }}'
          WG_PRIVATE_KEY: '${{ secrets.WG_PRIVATE_KEY }}'
          WG_DNS: '${{ secrets.WG_DNS }}'
        run: |
          sudo apt install wireguard
          echo A
          echo ${WG_PRIVATE_KEY} > private_key
          echo B
          sudo ip link add dev wg0 type wireguard
          echo C
          sudo ip -4 address add dev wg0 ${WG_IPS} peer ${WG_DNS}
          echo D
          sudo wg set wg0 listen-port 48123 private-key private_key peer ${WG_PUBLIC_KEY} allowed-ips ${WG_ALLOWED_IPS} endpoint ${WG_ENDPOINT}
          echo E
          sudo ip link set up dev wg0
          echo F

      - name: Deploy application image to the server
        uses: appleboy/ssh-action@master
        env:
            GITHUB_USERNAME: ${{ github.repository_owner }}
            CR_PAT: ${{ secrets.CR_PAT }}
        with:
          host: ${{ secrets.REMOTE_HOST_URL }}
          username: ${{ secrets.REMOTE_HOST_USERNAME }}
          key: ${{ secrets.REMOTE_HOST_SSH_KEY }}
          envs: GITHUB_USERNAME, CR_PAT
          script: |
            docker login -u $GITHUB_USERNAME -p $CR_PAT ghcr.io
            docker image rm ghcr.io/${{ github.repository }}:latest
            docker pull ghcr.io/${{ github.repository }}:latest
            cd /srv/portfolio
            docker-compose down
            docker container remove portfolio_evac-sim
            docker-compose up --no-build -d

